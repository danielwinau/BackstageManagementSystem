[{"C:\\aaa\\allcodings\\gulihoutai\\src\\index.js":"1","C:\\aaa\\allcodings\\gulihoutai\\src\\App.jsx":"2","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\login\\login.jsx":"3","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\admin\\admin.jsx":"4","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\store.js":"5","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\action_types.js":"6","C:\\aaa\\allcodings\\gulihoutai\\src\\api\\index.js":"7","C:\\aaa\\allcodings\\gulihoutai\\src\\api\\myAxios.js":"8","C:\\aaa\\allcodings\\gulihoutai\\src\\config\\index.js":"9","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\action_creators\\login_action.js":"10","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\reducers\\login_reducer.js":"11","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\admin\\header\\header.jsx":"12","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\bar\\bar.jsx":"13","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\line\\line.jsx":"14","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\user\\user.jsx":"15","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\product\\product.jsx":"16","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\category\\category.jsx":"17","C:\\aaa\\allcodings\\gulihoutai\\src\\components\\home\\home.jsx":"18","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\pie\\pie.jsx":"19","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\role\\role.jsx":"20","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\admin\\left_nav\\left_nav.jsx":"21","C:\\aaa\\allcodings\\gulihoutai\\src\\config\\menu_config.js":"22","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\reducers\\index.js":"23","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\reducers\\menu_reducer.js":"24","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\action_creators\\menu_action.js":"25","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\product\\add_update.jsx":"26","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\product\\detail.jsx":"27","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\reducers\\product_reducer.js":"28","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\action_creators\\product_action.js":"29","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\reducers\\category_reducer.js":"30","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\action_creators\\category_action.js":"31","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\product\\picture_wall.jsx":"32","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\product\\rich_text_editor.jsx":"33"},{"size":365,"mtime":1654428332524,"results":"34","hashOfConfig":"35"},{"size":469,"mtime":1654945622610,"results":"36","hashOfConfig":"35"},{"size":2912,"mtime":1656715597000,"results":"37","hashOfConfig":"35"},{"size":2595,"mtime":1658403868886,"results":"38","hashOfConfig":"35"},{"size":267,"mtime":1655985742913,"results":"39","hashOfConfig":"35"},{"size":246,"mtime":1657793492640,"results":"40","hashOfConfig":"35"},{"size":2712,"mtime":1658666274390,"results":"41","hashOfConfig":"35"},{"size":1232,"mtime":1655295253076,"results":"42","hashOfConfig":"35"},{"size":293,"mtime":1656077523976,"results":"43","hashOfConfig":"35"},{"size":445,"mtime":1654899967908,"results":"44","hashOfConfig":"35"},{"size":699,"mtime":1654900239354,"results":"45","hashOfConfig":"35"},{"size":2895,"mtime":1658004396404,"results":"46","hashOfConfig":"35"},{"size":737,"mtime":1658835138266,"results":"47","hashOfConfig":"35"},{"size":739,"mtime":1658835272873,"results":"48","hashOfConfig":"35"},{"size":5093,"mtime":1658666202867,"results":"49","hashOfConfig":"35"},{"size":4652,"mtime":1657632039874,"results":"50","hashOfConfig":"35"},{"size":4512,"mtime":1657794410521,"results":"51","hashOfConfig":"35"},{"size":157,"mtime":1654998265510,"results":"52","hashOfConfig":"35"},{"size":1505,"mtime":1658837579860,"results":"53","hashOfConfig":"35"},{"size":5530,"mtime":1658615852847,"results":"54","hashOfConfig":"35"},{"size":2590,"mtime":1658664604662,"results":"55","hashOfConfig":"35"},{"size":1473,"mtime":1655816001802,"results":"56","hashOfConfig":"35"},{"size":384,"mtime":1657793695377,"results":"57","hashOfConfig":"35"},{"size":338,"mtime":1655986225922,"results":"58","hashOfConfig":"35"},{"size":142,"mtime":1655986225921,"results":"59","hashOfConfig":"35"},{"size":5241,"mtime":1658523348571,"results":"60","hashOfConfig":"35"},{"size":3931,"mtime":1658523533532,"results":"61","hashOfConfig":"35"},{"size":355,"mtime":1657632335270,"results":"62","hashOfConfig":"35"},{"size":153,"mtime":1657631247352,"results":"63","hashOfConfig":"35"},{"size":364,"mtime":1657793576127,"results":"64","hashOfConfig":"35"},{"size":162,"mtime":1657794476224,"results":"65","hashOfConfig":"35"},{"size":2593,"mtime":1658494710460,"results":"66","hashOfConfig":"35"},{"size":1478,"mtime":1658520810721,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"a2dy04",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\aaa\\allcodings\\gulihoutai\\src\\index.js",[],["142","143"],"C:\\aaa\\allcodings\\gulihoutai\\src\\App.jsx",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\login\\login.jsx",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\admin\\admin.jsx",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\store.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\action_types.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\api\\index.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\api\\myAxios.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\config\\index.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\action_creators\\login_action.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\reducers\\login_reducer.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\admin\\header\\header.jsx",["144"],"import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { createDeleteUserInfoAction } from '../../../redux/action_creators/login_action';\r\nimport {Button, Icon} from 'antd'\r\nimport screenfull from 'screenfull';\r\nimport dayjs from 'dayjs'\r\nimport { reqWeather } from '../../../api';\r\nimport './header.less'\r\nimport menuList from '../../../config/menu_config'\r\n\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    isFull:false,\r\n    date:dayjs().format('YYYY-MM-DD HH:mm:ss'),\r\n    weatherInfo:{},\r\n    title:''\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    screenfull.on('change', () => {\r\n      const isFull = !this.state.isFull\r\n      this.setState({isFull})\r\n    });\r\n    this.timer=setInterval(()=>{\r\n      this.setState({date:dayjs().format('YYYY-MM-DD HH:mm:ss')})\r\n    },1000);\r\n    this.getWeather()\r\n    this.getTitle()\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  getWeather = async ()=>{\r\n    const weather= await reqWeather()\r\n    this.setState({weatherInfo:weather})\r\n  }\r\n\r\n\r\n  fullScreen = ()=>{\r\n    screenfull.toggle();\r\n  }\r\n\r\n  logout = ()=>{\r\n    this.props.deleteUser()\r\n  }\r\n\r\n\r\n  // ()=>{}\r\n  getTitle = ()=>{\r\n    let {pathname}=this.props.location\r\n    let pathKey=pathname.split('/').reverse()[0]\r\n    if(pathname.indexOf('product') !== -1) pathKey='product'\r\n    let title=''\r\n    menuList.forEach((item)=>{\r\n      if (item.children instanceof Array) {\r\n        let tmp = item.children.find((citem)=>{\r\n          return citem.key===pathKey  \r\n        })\r\n        if (tmp) {title=tmp.title}\r\n      }else{\r\n        if (pathKey===item.key) {title=item.title}\r\n      }\r\n    })\r\n    this.setState({title})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const {isFull,weatherInfo}=this.state\r\n    return (\r\n      <header className='header'>\r\n          <div className='header-top'>\r\n            <Button size='small' onClick={this.fullScreen}>\r\n              <Icon type={isFull?'fullscreen-exit':'fullscreen'} />\r\n            </Button>\r\n            <span className='username'>welcome, {this.props.userInfo.user.username}</span>\r\n            <Button type='link' onClick={this.logout}>logout</Button>\r\n          </div>\r\n          <div className='header-bottom'>\r\n            <div className='header-bottom-left'>\r\n              {this.props.title||this.state.title}\r\n            </div>\r\n            <div className='header-bottom-right'>\r\n              {this.state.date}\r\n              {/* \r\n              <img src={weatherInfo.dayPictureUrl} alt=\"weatherforcast\"/>\r\n              {weatherInfo.weather}-{weatherInfo.temprature}\r\n              */}\r\n            </div>\r\n          </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state=>({\r\n    userInfo:state.userInfo,\r\n    title:state.title\r\n  }),\r\n  {deleteUser:createDeleteUserInfoAction}\r\n  )(withRouter(Header))\r\n  \r\n\r\n\r\n\r\n","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\bar\\bar.jsx",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\line\\line.jsx",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\user\\user.jsx",["145"],"import React,{Component} from 'react'\r\nimport {Card,Button,Icon,Table, message,Modal,Form,Input,Select} from 'antd';\r\nimport dayjs from 'dayjs'\r\nimport {reqUserList,reqAddUser} from '../../api'\r\nimport {PAGE_SIZE} from '../../config'\r\nconst {Item} = Form\r\nconst {Option} = Select\r\n\r\n\r\nclass User extends Component{\r\n\r\n  state = {\r\n    isShowAdd:false, //是否展示新增弹窗\r\n    userList:[],\r\n    roleList:[]\r\n  }\r\n\r\n  getUserList = async()=>{\r\n    let result = await reqUserList()\r\n    const {status,data,msg}=result\r\n    if(status === 0) this.setState({\r\n      userList:data.users.reverse(),\r\n      roleList:data.roles\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserList()\r\n  }\r\n\r\n  //新增用户弹窗----确定按钮回调\r\n  handleOk = ()=>{\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if(err) return\r\n      let result = await reqAddUser(values)\r\n      const {status, data, msg}=result\r\n      if(status===0) {\r\n        message.success('添加用户成功')\r\n        let userList=[...this.state.userList]\r\n        userList.unshift(data)\r\n        this.setState({userList,isShowAdd:false})\r\n      }\r\n      else message.error(msg,1)\r\n    })\r\n  }\r\n\r\n  //新增用户弹窗----取消按钮回调\r\n  handleCancel = ()=>{\r\n    this.setState({isShowAdd:false})\r\n  }\r\n\r\n  \r\n  render(){\r\n    const dataSource = this.state.userList\r\n    const columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n        key: 'username',\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n      },\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone',\r\n        key: 'phone',\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        key: 'create_time',\r\n        render:(time)=> dayjs(time).format('YYYY-MM-DD HH:mm:ss')\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        key: 'role_id',\r\n        render:(id)=>{\r\n          let result = this.state.roleList.find(item=>item._id === id)\r\n          if(result) return result.name\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'option',\r\n        render: () => (\r\n          <div>\r\n            <Button \r\n              type='link' \r\n             >修改\r\n            </Button>\r\n            <Button \r\n              type='link' \r\n             >删除\r\n            </Button>\r\n          </div>\r\n          )\r\n      }\r\n    ];\r\n    const {getFieldDecorator} = this.props.form\r\n    return (\r\n      <div>\r\n        <Card\r\n          title={\r\n            <Button type='primary' onClick={()=>{this.setState({isShowAdd:true});this.props.form.resetFields();}}>\r\n              <Icon type=\"plus\"/>创建用户\r\n            </Button>\r\n          }\r\n        >\r\n          <Table \r\n            dataSource={dataSource} \r\n            columns={columns}\r\n            bordered\r\n            pagination={{defaultPageSize:PAGE_SIZE}}\r\n            rowKey=\"_id\"\r\n          />\r\n        </Card>\r\n        {/* 新增角色提示框 */}\r\n        <Modal\r\n          title=\"添加用户\"\r\n          visible={this.state.isShowAdd}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <Form labelCol={{span:4}} wrapperCol={{span:16}}>\r\n            <Item label=\"用户名\">\r\n              {getFieldDecorator('username', {\r\n                initialValue:'',\r\n                rules: [{required: true, message: '用户名必须输入' },],\r\n              })(<Input placeholder=\"请输入用户名\"/>)}\r\n            </Item>\r\n            <Item label=\"密码\">\r\n              {getFieldDecorator('password', {\r\n                initialValue:'',\r\n                rules: [{required: true, message: '密码必须输入' },],\r\n              })(<Input placeholder=\"请输入密码\"/>)}\r\n            </Item>\r\n            <Item label=\"手机号\">\r\n              {getFieldDecorator('phone', {\r\n                initialValue:'',\r\n                rules: [{required: true, message: '手机号必须输入' },],\r\n              })(<Input placeholder=\"请输入手机号\"/>)}\r\n            </Item>\r\n            <Item label=\"邮箱\">\r\n              {getFieldDecorator('email', {\r\n                initialValue:'',\r\n                rules: [{required: true, message: '邮箱必须输入' },],\r\n              })(<Input placeholder=\"请输入邮箱\"/>)}\r\n            </Item>\r\n            <Item label=\"角色\">\r\n              {getFieldDecorator('role_id', {\r\n                initialValue:'',\r\n                rules: [{required: true, message: '必须选择一个角色' },],\r\n              })(\r\n                <Select>\r\n                  <Option value=''>请选择一个角色</Option>\r\n                  {this.state.roleList.map( (item)=>{\r\n                    return (<Option key={item._id} value={item._id}>{item.name}</Option>)\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create() (User)","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\product\\product.jsx",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\category\\category.jsx",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\components\\home\\home.jsx",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\pie\\pie.jsx",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\role\\role.jsx",["146","147","148"],"import React,{Component} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Card,Button,Icon,Table, message,Modal,Form,Input,Tree } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport { reqRoleList, reqAddRole,reqAuthRole } from '../../api';\r\nimport menuList from '../../config/menu_config'\r\nconst {Item} = Form\r\nconst { TreeNode } = Tree;\r\n\r\n\r\nclass Role extends Component{\r\n\r\n  state = {\r\n    isShowAdd:false,\r\n    isShowAuth:false,\r\n    roleList:[],\r\n    menuList,\r\n    checkedKeys:[],\r\n    _id:'' //当前操作的角色\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getRoleList()\r\n\r\n  }\r\n\r\n  getRoleList = async ()=>{\r\n    let result= await reqRoleList()\r\n    const {status, data, msg}=result\r\n    if (status===0) {\r\n      this.setState({roleList:data})\r\n      \r\n    }\r\n  }\r\n\r\n  //新增角色--确认按钮\r\n  handleOk = ()=>{\r\n    this.props.form.validateFields( async (err, values) =>  {\r\n    if(err) return\r\n    let result=await reqAddRole(values)\r\n    const {status, data, msg}=result\r\n    if (status===0) {\r\n      message.success('新增角色成功')\r\n      this.setState({isShowAdd:false})\r\n      this.getRoleList()\r\n\r\n    }\r\n    else message.error(msg,1)\r\n    });\r\n  }\r\n\r\n  //新增角色--取消按钮\r\n  handleCancel = ()=>{\r\n    this.setState({isShowAdd:false})\r\n  }\r\n\r\n  showAdd = ()=>{\r\n    this.props.form.resetFields()\r\n    this.setState({isShowAdd:true})\r\n\r\n\r\n  }\r\n\r\n  showAuth = (id)=>{\r\n    const {roleList}=this.state\r\n    let result=roleList.find(item=>item._id===id)\r\n    if(result) this.setState({checkedKeys:result.menus})\r\n    this.setState({isShowAuth:true,_id:id})\r\n\r\n  }\r\n\r\n  //授权弹窗--确认按钮\r\n  handleAuthOk = async()=>{\r\n    const {_id,checkedKeys}=this.state\r\n    const {username}=this.props\r\n    let result=  await reqAuthRole({_id,menus:checkedKeys,auth_name:username})\r\n    const {status, data, msg}=result\r\n    if (status===0) {\r\n      message.success('角色授权成功')\r\n      this.setState({isShowAuth:false})\r\n\r\n    }\r\n    else message.error(msg,1)\r\n  }\r\n\r\n  //授权弹窗--取消按钮\r\n  handleAuthCancel = ()=>{\r\n    this.setState({isShowAuth:false})\r\n  }\r\n\r\n  //---------------tree start-----------------------\r\n\r\n  onCheck = checkedKeys => this.setState({ checkedKeys })\r\n\r\n  renderTreeNodes = data =>\r\n    data.map(item => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\r\n            {this.renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return <TreeNode key={item.key} {...item} />;\r\n    });\r\n  //---------------tree end-----------------------\r\n\r\n\r\n  render(){\r\n    const dataSource = this.state.roleList\r\n    const columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        key: 'create_time',\r\n        render:(time)=> dayjs(time).format('YYYY-MM-DD HH:mm:ss')\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        key: 'auth_time',\r\n        render:(time)=> time ? dayjs(time).format('YYYY-MM-DD HH:mm:ss') : ''\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name',\r\n        key: 'auth_name',\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'option',\r\n        render: (item) => <Button type='link' onClick={()=>{this.showAuth(item._id)}}>设置权限</Button>\r\n      }\r\n    ];\r\n    \r\n    \r\n    const treeData = this.state.menuList  //treeData是树形菜单的源数据\r\n    const {getFieldDecorator} = this.props.form\r\n    return (\r\n      <div>\r\n        <Card\r\n          title={<Button type='primary' onClick={()=>{this.showAdd()}}>\r\n                  <Icon type=\"plus\"/>\r\n                  新增角色\r\n                 </Button>}\r\n          style={{ width: '100% '}}\r\n        >\r\n          <Table \r\n            dataSource={dataSource} \r\n            columns={columns}\r\n            bordered\r\n            pagination={{defaultPageSize:5}}\r\n            rowKey=\"_id\"\r\n          />\r\n        </Card>\r\n        {/* 新增角色提示框 */}\r\n        <Modal\r\n          title=\"新增角色\"\r\n          visible={this.state.isShowAdd}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <Form onSubmit={this.handleOk}>\r\n            <Item>\r\n              {getFieldDecorator('roleName', {\r\n                initialValue:'',\r\n                rules: [\r\n                  {required: true, message: '角色名必须输入' },\r\n                ],\r\n              })(\r\n                <Input placeholder=\"请输入角色名\" />\r\n              )}\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n        {/* 设置权限提示框 */}\r\n        <Modal\r\n          title=\"设置权限\"\r\n          visible={this.state.isShowAuth}\r\n          onOk={this.handleAuthOk}\r\n          onCancel={this.handleAuthCancel}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <Tree\r\n            checkable\r\n            onCheck={this.onCheck}\r\n            checkedKeys={this.state.checkedKeys}\r\n            defaultExpandAll={true}\r\n          >\r\n            <TreeNode title='top' key='top'>\r\n              {this.renderTreeNodes(treeData)}\r\n            </TreeNode>\r\n          </Tree>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({username:state.userInfo.user.username}),\r\n  {}\r\n)(Form.create()(Role))\r\n","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\admin\\left_nav\\left_nav.jsx",["149"],"import React, { Component } from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport {createSaveTitleAction} from '../../../redux/action_creators/menu_action'\r\nimport { Menu, Icon} from 'antd';\r\nimport logo from '../../../static/imgs/logo.png'\r\nimport  '../left_nav/left_nav.less'\r\nimport menuList from '../../../config/menu_config'\r\n//import Item from 'antd/lib/list/Item';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component {\r\n\r\n\r\nhasAuth = (item)=>{\r\n    const {menus,username}=this.props\r\n    if(username==='admin') return true\r\n    else if(!item.children) return menus.find( item2 => item2===item.key  )\r\n    else return item.children.some( item3 => { return menus.indexof(item3.key) !==-1  }   )\r\n}\r\n\r\ncreateMenu = (target)=>{\r\n    return target.map( (item)=>{\r\n        if( this.hasAuth(item) ){\r\n            if (!item.children) {\r\n                return (\r\n                    <Menu.Item key={item.key} onClick={()=>{this.props.saveTitle(item.title)}} >\r\n                    <Link to={item.path}>\r\n                        <Icon type={item.icon} />\r\n                        <span>{item.title}</span>\r\n                    </Link>\r\n                    </Menu.Item>\r\n                )\r\n            }else{\r\n                return (\r\n                    <SubMenu\r\n                    key={item.key}\r\n                    title={\r\n                    <span>\r\n                        <Icon type={item.icon} />\r\n                        <span>{item.title}</span>\r\n                    </span>\r\n                    }\r\n                    >\r\n                    { this.createMenu(item.children) }\r\n                    </SubMenu>\r\n                )\r\n            }\r\n        }\r\n    } )\r\n}\r\n\r\nrender() {\r\n    let {pathname} = this.props.location\r\n    return (\r\n        <div>\r\n            <header className='nav-header'>\r\n                <img src={logo} alt=\"logo\" />\r\n                <h1>TB STORE</h1>\r\n            </header>\r\n            <Menu\r\n            defaultSelectedKeys={pathname.indexOf('product') !== -1?'product':pathname.split('/').reverse()[0]}\r\n            defaultOpenKeys={pathname.split('/').splice(2)}\r\n            mode=\"inline\"\r\n            theme=\"dark\"\r\n            >\r\n                {\r\n                    this.createMenu(menuList)\r\n                }\r\n            </Menu>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n    state=>({\r\n        menus:state.userInfo.user.role.menus,\r\n        username:state.userInfo.user.username,\r\n    }),\r\n    {saveTitle:createSaveTitleAction}\r\n)(withRouter(LeftNav))\r\n","C:\\aaa\\allcodings\\gulihoutai\\src\\config\\menu_config.js",["150"],"//项目的菜单配置\r\nexport default[\r\n    {\r\n      title: '首页', // 菜单标题名称\r\n      key: 'home', // 对应的path\r\n      icon: 'home', // 图标名称\r\n      path: '/admin/home'//对应路径\r\n    },\r\n    {\r\n      title: '商品',\r\n      key: 'prod_about',\r\n      icon: 'appstore',\r\n      children: [ // 子菜单列表\r\n        {\r\n          title: '分类管理',\r\n          key: 'category',\r\n          icon: 'unordered-list',\r\n          path: '/admin/prod_about/category'\r\n        },\r\n        {\r\n          title: '商品管理',\r\n          key: 'product',\r\n          icon: 'tool',\r\n          path: '/admin/prod_about/product'\r\n        },\r\n      ]\r\n    },\r\n  \r\n    {\r\n      title: '用户管理',\r\n      key: 'user',\r\n      icon: 'user',\r\n      path: '/admin/user'\r\n    },\r\n    {\r\n      title: '角色管理',\r\n      key: 'role',\r\n      icon: 'safety',\r\n      path: '/admin/role'\r\n    },\r\n  \r\n    {\r\n      title: '图形图表',\r\n      key: 'charts',\r\n      icon: 'area-chart',\r\n      children: [\r\n        {\r\n          title: '柱形图',\r\n          key: 'bar',\r\n          icon: 'bar-chart',\r\n          path: '/admin/charts/bar'\r\n        },\r\n        {\r\n          title: '折线图',\r\n          key: 'line',\r\n          icon: 'line-chart',\r\n          path: '/admin/charts/line'\r\n        },\r\n        {\r\n          title: '饼图',\r\n          key:  'pie',\r\n          icon: 'pie-chart',\r\n          path: '/admin/charts/pie'\r\n        },\r\n      ]\r\n    },\r\n  ]\r\n  ","C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\reducers\\index.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\reducers\\menu_reducer.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\action_creators\\menu_action.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\product\\add_update.jsx",["151","152"],"import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Button, Card, Icon, Form, Input, Select, message} from 'antd'\r\nimport { reqCategoryList,reqAddProduct, reqProdById,reqUpdateProduct } from '../../api'\r\nimport PicturesWall from './picture_wall'\r\nimport RichTextEditor from './rich_text_editor'\r\n\r\n\r\nconst {Item} = Form\r\nconst {Option} = Select\r\n\r\n\r\nclass AddUpdate extends Component {\r\n\r\n  state={\r\n    categoryList:[],\r\n    operaType:'add',\r\n    categoryId:'',\r\n    name:'',\r\n    desc:'',\r\n    price:'',\r\n    detail:'',\r\n    imgs:[],\r\n    _id:'',\r\n  }\r\n\r\n  getCategoryList= async ()=>{\r\n    let result= await reqCategoryList()\r\n    const {status,data,msg}=result\r\n    if (status===0) this.setState({categoryList:data})\r\n    else message.error(msg,1)\r\n  }\r\n\r\n  getProductList = async (id)=>{\r\n    let result= await reqProdById(id)\r\n    const {status,data,msg}=result\r\n    if (status===0) {\r\n      this.setState({...data})\r\n      this.refs.pictureWall.setFileList(data.imgs)\r\n      this.refs.richTextEditor.setRichText(data.detail)\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const {categoryList, productList}=this.props\r\n    const {id}=this.props.match.params\r\n    console.log(id);\r\n    if (categoryList.length) this.setState({categoryList})\r\n    else this.getCategoryList()\r\n    if(id) {\r\n      this.setState({operaType:'update'})\r\n      if (productList.length) {\r\n        let result=productList.find( item=>item._id===id )\r\n        if(result){\r\n          this.setState({...result})\r\n          this.refs.pictureWall.setFileList(result.imgs)\r\n          this.refs.richTextEditor.setRichText(result.detail)\r\n        }\r\n      }\r\n      else this.getProductList(id)\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event)=>{\r\n    event.preventDefault()\r\n    let imgs=this.refs.pictureWall.getImgArr()\r\n    let detail=this.refs.richTextEditor.getRichText()\r\n    this.props.form.validateFields( async (err, values) =>  {\r\n      if(err) return\r\n      const {operaType,_id}=this.state\r\n      let result\r\n      if (operaType==='add') result= await reqAddProduct({...values,imgs,detail })\r\n      else result= await reqUpdateProduct({...values,imgs,detail,_id})\r\n      const {status,data,msg}=result\r\n      if (status===0) {\r\n        message.success('商品操作成功')\r\n        this.props.history.replace('/admin/prod_about/product')\r\n      }\r\n      else message.error(msg)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {operaType}=this.state\r\n    return (\r\n      <Card title={\r\n        <div>\r\n          <Button type=\"link\" onClick={this.props.history.goBack}>\r\n            <Icon type=\"arrow-left\"/>\r\n            <span>返回</span>\r\n          </Button>\r\n          <span>{operaType==='update'?'商品修改':'商品添加'}</span>\r\n        </div>}\r\n      >\r\n        <Form\r\n          onSubmit={this.handleSubmit}\r\n          labelCol={{md:2}}\r\n          wrapperCol={{md:7}}\r\n        >\r\n          <Item label=\"商品名称\">\r\n            {getFieldDecorator('name', {\r\n              initialValue:this.state.name||'',\r\n              rules: [{ required: true, message: 'Please input your 商品名称!' }],\r\n            })(\r\n              <Input\r\n                placeholder=\"商品名称\"\r\n              />,\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品描述\">\r\n            {getFieldDecorator('desc', {\r\n              initialValue:this.state.desc||'',\r\n              rules: [{ required: true, message: 'Please input your 商品描述!' }],\r\n            })(\r\n              <Input\r\n                placeholder=\"商品描述\"\r\n              />,\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品价格\">\r\n            {getFieldDecorator('price', {\r\n              initialValue:this.state.price||'',\r\n              rules: [{ required: true, message: 'Please input your 商品价格!' }],\r\n            })(\r\n              <Input\r\n                placeholder=\"商品价格\"\r\n                addonAfter=\"元\"\r\n                prefix=\"￥\"\r\n                type=\"number\"\r\n              />,\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品分类\">\r\n            {getFieldDecorator('categoryId', {\r\n              initialValue:this.state.categoryId||'',\r\n              rules: [{ required: true, message: 'Please input your 商品分类!' }],\r\n            })(\r\n              <Select>\r\n                  <Option value=\"\">请选择分类</Option>\r\n                  {\r\n                    this.state.categoryList.map(item=>{\r\n                      return <Option key={item._id} value={item._id}>{item.name}</Option>\r\n                    } )\r\n                  }\r\n              </Select>\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品图片\" wrapperCol={{md:12}}>\r\n            <PicturesWall ref=\"pictureWall\" />\r\n          </Item>\r\n          <Item label=\"商品详情\" wrapperCol={{md:12}}>\r\n            <RichTextEditor ref=\"richTextEditor\" />\r\n          </Item>\r\n          <Button type='primary' htmlType='submit'  >提交</Button>\r\n        </Form>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state=>({\r\n    categoryList:state.categoryList,\r\n    productList:state.productList,\r\n  }),\r\n  {}\r\n)(Form.create()(AddUpdate))","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\product\\detail.jsx",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\reducers\\product_reducer.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\action_creators\\product_action.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\reducers\\category_reducer.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\redux\\action_creators\\category_action.js",[],"C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\product\\picture_wall.jsx",["153"],"import React, { Component } from 'react'\r\nimport { Upload, Icon, Modal, message } from 'antd';\r\nimport {BASE_URL} from '../../config'\r\nimport {reqDeletePicture} from '../../api'\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: [],\r\n  };\r\n\r\n  getImgArr = ()=>{\r\n    let result=[]\r\n    this.state.fileList.forEach( item=>{result.push(item.name)} )\r\n    return result\r\n  }\r\n\r\n  setFileList = (imgArr)=>{\r\n    let fileList=[]\r\n    imgArr.forEach( (item,index)=>{\r\n      fileList.push({uid:-index,name:item,url:`${BASE_URL}/upload/${item}`})\r\n    })\r\n    this.setState({fileList})\r\n  }\r\n  \r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = async ({file, fileList }) => {\r\n    if (file.status==='done') {\r\n        fileList[fileList.length-1].url=file.response.data.url\r\n        fileList[fileList.length-1].name=file.response.data.name\r\n    }\r\n    if (file.status==='removed') {\r\n        let result= await reqDeletePicture(file.name)\r\n        const {status, data, msg}= result\r\n        if (status===0) message.success('图片删除成功')\r\n        else message.error(msg,1)\r\n    }\r\n    this.setState({ fileList })\r\n  }\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action={`${BASE_URL}/manage/img/upload`}\r\n          method='post'\r\n          name='image'\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","C:\\aaa\\allcodings\\gulihoutai\\src\\containers\\product\\rich_text_editor.jsx",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":75,"column":19,"nodeType":"160","messageId":"161","endLine":75,"endColumn":30},{"ruleId":"158","severity":1,"message":"162","line":20,"column":24,"nodeType":"160","messageId":"161","endLine":20,"endColumn":27},{"ruleId":"158","severity":1,"message":"162","line":30,"column":26,"nodeType":"160","messageId":"161","endLine":30,"endColumn":29},{"ruleId":"158","severity":1,"message":"163","line":42,"column":20,"nodeType":"160","messageId":"161","endLine":42,"endColumn":24},{"ruleId":"158","severity":1,"message":"163","line":78,"column":20,"nodeType":"160","messageId":"161","endLine":78,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":24,"column":30,"nodeType":"166","messageId":"167","endLine":24,"endColumn":32},{"ruleId":"168","severity":1,"message":"169","line":2,"column":1,"nodeType":"170","endLine":67,"endColumn":4},{"ruleId":"158","severity":1,"message":"162","line":36,"column":24,"nodeType":"160","messageId":"161","endLine":36,"endColumn":27},{"ruleId":"158","severity":1,"message":"163","line":74,"column":21,"nodeType":"160","messageId":"161","endLine":74,"endColumn":25},{"ruleId":"158","severity":1,"message":"163","line":57,"column":24,"nodeType":"160","messageId":"161","endLine":57,"endColumn":28},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'weatherInfo' is assigned a value but never used.","Identifier","unusedVar","'msg' is assigned a value but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]